[{"title":"","date":"2021-10-01T03:25:49.205Z","path":"2021/10/01/sql注入原理/","text":"SQL 注入原理分析（学习笔记）1.SQL语言介绍 ​ SQL 全称是“结构化查询语言( Structured Query Language)”, 最早是IBM的圣约瑟研究实验室为其关系数据库管理系统SYSTEMR开发的一种查询语言,它的前身是SQUARE语言。SQL语言结构简洁,功能强大,简单易学,所以自从IBM公司1981年推出以来, SQL语言得到了广泛的应用。 ​ 结构化查询语言SQL是一种介于关系代数与关系演算之间的语言,其功能包括查询、操纵、定义和控制四个方面,是一个通用的功能极强的关系数据库标准语言。在SQL语言中不需要告诉SQL如何访问数据库,只要告诉SQL需要数据库做什么。 2.SQL注入产生原因 ​ 在现在网络技术于信息技术高速发展的时代，越来越多程序编写应用于B/S模式，而BS模式建立在互联网上，对安全的控制能力较弱，由于开发人员的水平和经验参差不齐，相当一部分的程序员编写代码没有对用户输入的数据或者是页面中所携带的信息进行必要的合法性判断。攻击者利用这个机会提交一段数据库查询代码，根据程序返回的结果，就可以获得一些数据库信息。 3.SQL注入核心原理 ​ SQL注入（SQLi）是一种注入攻击，可以执行恶意SQL语句。它通过将任意SQL代码插入数据库查询，使攻击者能够完全控制Web应用程序后面的数据库服务器。攻击者可以使用SQL注入漏洞绕过应用程序安全措施；可以绕过网页或Web应用程序的身份验证和授权，并检索整个SQL数据库的内容；还可以使用SQL注入来添加，修改和删除数据库中的记录。 ​ SQL注入漏洞可能会影响使用SQL数据库（如MySQL，Oracle，SQL Server或其他）的任何网站或Web应用程序。犯罪分子可能会利用它来未经授权访问用户的敏感数据：客户信息，个人数据，商业机密，知识产权等。SQL注入攻击是最古老，最流行，最危险的Web应用程序漏洞之一。 4.四程WEB框架 ps.灵活的SQL查询语句+用户输入的数据代入了SQL语句=用户直接操作数据库—&gt;SQL注入漏洞 5.用户输入可控，代码对用户输入进行了对接，带入SQL语句，产生SQL注入漏洞 eg：http://xxx.com/index.php?id=1 UNION SELECT 1,version()# ​ ↑ ↑ 正常输入 用户输入可自由控制 select id,location from jobs where id=1——返回id为1的location select id,location from jobs where id =1 union select 1,version()# ——返回id为1的location和数据库文本","tags":[]},{"title":"php 初学笔记","date":"2021-09-18T13:45:23.000Z","path":"2021/09/18/php初学笔记/","text":"#PHP 初学笔记——数据类型1.# 概念 # PHP（PHP: Hypertext Preprocessor）即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。PHP语法学习了C语言，吸纳Java和Perl多个语言的特色发展出自己的特色语法，并根据它们的长项持续改进提升自己，例如java的面向对象编程，该语言当初创建的主要目标是让开发人员快速编写出优质的web网站。 PHP同时支持面向对象和面向过程的开发，使用上非常灵活。 2.# 数据类型 # a.PHP支持8种数据类型： （1）integer-整形：只能整数，也可以正数或负数。 （2）folat-浮点型：是数字，和整形数据不同的是它有小数位。 （3）string-字符串型：是字符串，连续的字符序列，可以是计算机所能表示的一切字符的集合。 （4）boolean-布尔型：只有两个值真和假。 （5）array-数组：储存相同数据类型的多个数据项 （6）object-对象：储存类的实例 （7）resource-资源：储存着到外部资源的应用，如打开文件、数据库连接、图形画布区域等 （8）null-空：没有被赋值、已经被重置或赋值为null的变量。 b.PHP数据类型的转换： PHP变量的数据类型是由付给它的值决定的，不用像C语言一样事先声明。 （1）（int）、（integer）：转换成整形——(int)$boo,(integer)$str （float）、（double）、（real）：转换成浮点型——(float)$str,(doubel)$str,(real)$str （string）：转换成字符串————(string)$boo （bool）、（boolean）：转换成布尔类型————(bool)$num,(boolean)$str （array）：转换成数组————(array)$str （object）：转换成对象————(object)$str （unset）:转换为null————(unset)$str （2）ps. 1.&quot;=&quot;是赋值操作符。 2.在进行数据类型转换过程中应注意：转换布尔型时，null、0和未赋值的变量或数组会被转换成false，其它为true。 3.当转换成整形时，布尔型数据的false转换为0，true转换为1，浮点型的小数部分被舍去，字符串型数据如果以小数开头则截取到非数字位，否则转换为0。 4.数据类型转换还可以通过set-type（）函数完成，该函数可以将指点的变量转换为指定的数据类型。————bool settype(mixed $var,string $type) 5.参数type有7个可选值：boolean、float、integer、array、null、object和string如果转换成功，则返回true，否则返回false。 6.当将字符串转换为整形数据时，如果字符串是以数字开头的，那么先将数字部分转换为整形，在舍去后面的字符串；如果数字中含有小数点，那么截取到小数点前一位。 （3）检测数据类型 1&gt; 2&gt;例子 in_numeric()检测变量是否由数字组成 结果","tags":[]}]