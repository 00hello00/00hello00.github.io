<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-23T10:27:38.646Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>00hello00</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php 初学笔记</title>
    <link href="http://example.com/2021/09/18/php%E5%88%9D%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/09/18/php%E5%88%9D%E5%AD%A6%E7%AC%94%E8%AE%B0/</id>
    <published>2021-09-18T13:45:23.000Z</published>
    <updated>2021-09-23T10:27:38.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-初学笔记——数据类型"><a href="#PHP-初学笔记——数据类型" class="headerlink" title="#PHP 初学笔记——数据类型"></a>#PHP 初学笔记——数据类型</h1><p>1.# 概念 #</p><p>PHP（PHP: Hypertext Preprocessor）<br>即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。PHP语法学习了C语言，吸纳Java和Perl多个语言的特色发展出自己的特色语法，并根据它们的长项持续改进提升自己，例如java的面向对象编程，该语言当初创建的主要目标是让开发人员快速编写出优质的web网站。 PHP同时支持面向对象和面向过程的开发，使用上非常灵活。</p><p>2.# 数据类型 #</p><p>a.PHP支持8种数据类型：</p><p>（1）integer-整形：只能整数，也可以正数或负数。</p><p>（2）folat-浮点型：是数字，和整形数据不同的是它有小数位。</p><p>（3）string-字符串型：是字符串，连续的字符序列，可以是计算机所能表示的一切字符的集合。</p><p>（4）boolean-布尔型：只有两个值真和假。</p><p>（5）array-数组：储存相同数据类型的多个数据项</p><p>（6）object-对象：储存类的实例</p><p>（7）resource-资源：储存着到外部资源的应用，如打开文件、数据库连接、图形画布区域等</p><p>（8）null-空：没有被赋值、已经被重置或赋值为null的变量。</p><p>b.PHP数据类型的转换：<br> PHP变量的数据类型是由付给它的值决定的，不用像C语言一样事先声明。</p><p>（1）（int）、（integer）：转换成整形——(int)$boo,(integer)$str</p><p>（float）、（double）、（real）：转换成浮点型——(float)$str,(doubel)$str,(real)$str</p><p>（string）：转换成字符串————(string)$boo</p><p>（bool）、（boolean）：转换成布尔类型————(bool)$num,(boolean)$str</p><p>（array）：转换成数组————(array)$str</p><p>（object）：转换成对象————(object)$str</p><p>（unset）:转换为null————(unset)$str</p><p>（2）ps.</p><pre><code>       1.&quot;=&quot;是赋值操作符。       2.在进行数据类型转换过程中应注意：转换布尔型时，null、0和未赋值的变量或数组会被转换成false，其它为true。              3.当转换成整形时，布尔型数据的false转换为0，true转换为1，浮点型的小数部分被舍去，字符串型数据如果以小数开头则截取到非数字位，否则转换为0。        4.数据类型转换还可以通过set-type（）函数完成，该函数可以将指点的变量转换为指定的数据类型。————bool settype(mixed $var,string $type)             5.参数type有7个可选值：boolean、float、integer、array、null、object和string如果转换成功，则返回true，否则返回false。       6.当将字符串转换为整形数据时，如果字符串是以数字开头的，那么先将数字部分转换为整形，在舍去后面的字符串；如果数字中含有小数点，那么截取到小数点前一位。</code></pre><p>（3）检测数据类型</p><p>1&gt;</p><p><img src="https://sm.ms/image/HmtT4RJpiV5YxaX" alt="检测数据类型的函数"></p><p>2&gt;例子</p><p>in_numeric()检测变量是否由数字组成</p><p><img src="https://sm.ms/image/ciLbxa5msF6ZMGE" alt="例子"></p><p>结果</p><p><img src="https://sm.ms/image/4VUEjMqfltGL2dO" alt="结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PHP-初学笔记——数据类型&quot;&gt;&lt;a href=&quot;#PHP-初学笔记——数据类型&quot; class=&quot;headerlink&quot; title=&quot;#PHP 初学笔记——数据类型&quot;&gt;&lt;/a&gt;#PHP 初学笔记——数据类型&lt;/h1&gt;&lt;p&gt;1.# 概念 #&lt;/p&gt;
&lt;p&gt;PHP（</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>newpapername</title>
    <link href="http://example.com/2021/09/18/newpapername/"/>
    <id>http://example.com/2021/09/18/newpapername/</id>
    <published>2021-09-18T13:45:23.000Z</published>
    <updated>2021-09-18T13:45:23.939Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/09/18/hello-world/"/>
    <id>http://example.com/2021/09/18/hello-world/</id>
    <published>2021-09-18T08:21:21.004Z</published>
    <updated>2021-09-18T08:21:21.004Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
